dep="TSH"
dat4A = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4A)
str(dat4A)
summary(dat4A)
mod4A = step(lm(TSH~  . , dat4A))
mod4A = lm.drop.F(mod4A)
#results
summary(mod4A)
plot(allEffects((mod4A)))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_") # "log_TG") anche analisi con log_TG danno comunque stessi risultati.
dat[, preds.fac] = factorall(dat[, preds.fac])
dep="TSH"
dat4A = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4A)
str(dat4A)
summary(dat4A)
mod4A = step(lm(TSH~  . , dat4A))
mod4A = lm.drop.F(mod4A)
#results
summary(mod4A)
plot(allEffects((mod4A)))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep = "log_TG"
dat4B = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4B)
str(dat4B)
summary(dat4B)
mod4B = step(lm(log_TG~  . , dat4B))
mod4B = lm.drop.F(mod4B)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_") # "log_TG") anche analisi con log_TG danno comunque stessi risultati.
dat[, preds.fac] = factorall(dat[, preds.fac])
dep="TSH"
dat4A = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4A)
str(dat4A)
summary(dat4A)
mod4A = step(lm(TSH~  . , dat4A))
mod4A = lm.drop.F(mod4A)
#results
summary(mod4A)
plot(allEffects((mod4A)))
str(dat4A)
summary(dat4A)
mod4A = step(lm(TSH~  . , dat4A))
mod4A = lm.drop.F(mod4A)
summary(mod4A)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep = "log_TG"
dat4B = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4B)
str(dat4B)
summary(dat4B)
mod4B = step(lm(log_TG~  . , dat4B))
mod4B = lm.drop.F(mod4B)
summary(mod4B)
plot(allEffects((mod4B)))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_", "TSH")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep = "T4"
dat4C = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4C)
str(dat4C)
summary(dat4C)
mod4C = step(lm(T4~  . , dat4C))
mod4C = lm.drop.F(mod4C)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_", "TSH")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep = "T4"
dat4C = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4C)
str(dat4C)
summary(dat4C)
mod4C = step(lm(T4~  . , dat4C))
mod4C = lm.drop.F(mod4C)
#results
summary(mod4C)
#results
summary(mod4C)
plot(allEffects((mod4C)))
#check_model(mod4C)
plot(allEffects((mod4C)))
mod4C = lm.drop.F(mod4C)
summary(mod4C)
summary(mod4B)
plot(allEffects((mod4B)))
#check_model(mod4B)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_", "TSH")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep = "T4"
dat4C = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4C)
str(dat4C)
summary(dat4C)
mod4C = step(lm(T4~  . , dat4C))
mod4C = lm.drop.F(mod4C)
#results
summary(mod4C)
#results
summary(mod4C)
plot(allEffects((mod4C)))
#check_model(mod4C)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_", "TSH")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep = "T3"
dat4D = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4D)
str(dat4D)
summary(dat4D)
mod4D = step(lm(T3~  . , dat4D))
mod4D = lm.drop.F(mod4D)
mod4D = lm.drop.F(mod4D)
(mod4D)
# results
summary(mod4D)
plot(allEffects((mod4D)))
#check_model(mod4D)
# results
summary(mod4D)
# results
summary(mod4D)
plot(allEffects((mod4D)))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4",  "Iodio_Creat__ug_g_") # "log_TG")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "SGA"
dat4Ca = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4Ca)
str(dat4Ca)
summary(dat4Ca)
mod4Ca = step(glm(SGA~  . , dat4Ca, family="binomial"))
mod4Ca = glm.drop.Chisq(mod4Ca)
mod4Ca = glm.drop.Chisq(mod4Ca)
summary(mod4Ca)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4",  "Iodio_Creat__ug_g_") # "log_TG")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "SGA"
dat4Ca = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4Ca)
str(dat4Ca)
summary(dat4Ca)
mod4Ca = step(glm(SGA~  . , dat4Ca, family="binomial"))
mod4Ca = glm.drop.Chisq(mod4Ca)
# results
summary(mod4Ca)
plot(allEffects((mod4Ca)))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "LBW"
dat4D = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4D)
str(dat4D)
summary(dat4D)
mod4D = step(glm(LBW~  . , dat4D, family="binomial"))
mod4D = glm.drop.Chisq(mod4D)
# results
summary(mod4Ca)
plot(allEffects((mod4Ca)))
#check_model(mod4Ca)
#binned_residuals(mod4Ca) # slightly bad fit
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4",  "Iodio_Creat__ug_g_") # "log_TG")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "SGA"
dat4Ca = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4Ca)
str(dat4Ca)
summary(dat4Ca)
mod4Ca = step(glm(SGA~  . , dat4Ca, family="binomial"))
mod4Ca = glm.drop.Chisq(mod4Ca)
# results
summary(mod4Ca)
plot(allEffects((mod4Ca)))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "LBW"
dat4D = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4D)
str(dat4D)
summary(dat4D)
mod4D = step(glm(LBW~  . , dat4D, family="binomial"))
mod4D = glm.drop.Chisq(mod4D)
# results
summary(mod4D)
str(dat4D)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "LBW"
dat4D = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4D)
str(dat4D)
summary(dat4D)
mod4D = step(glm(LBW~  . , dat4D, family="binomial"))
mod4D = glm.drop.Chisq(mod4D)
# results
summary(mod4D)
plot(allEffects((mod4D)))
#check_model(mod4D)
#binned_residuals(mod4D) # good fit
#with(dat4D, tapply(Iodio_Creat__ug_g_, TIT_DIC, mean))
#with(dat4D, tapply(Iodio_Creat__ug_g_, TIT_DIC, sd))
# create columns for APGAR
names(dat)[grep("1°_min", names(dat))]="APGAR_1"
names(dat)[grep("5°_min", names(dat))]="APGAR_5"
names(dat)[grep("10°_min", names(dat))]="APGAR_10"
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
# create columns for APGAR
names(dat)[grep("1°_min", names(dat))]="APGAR_1"
names(dat)[grep("5°_min", names(dat))]="APGAR_5"
names(dat)[grep("10°_min", names(dat))]="APGAR_10"
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
# create columns for APGAR
names(dat)[grep("1°_min", names(dat))]="APGAR_1"
names(dat)[grep("5°_min", names(dat))]="APGAR_5"
names(dat)[grep("10°_min", names(dat))]="APGAR_10"
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "T3", "T4", "Iodio_Creat__ug_g_")
dat[, preds.fac] = factorall(dat[, preds.fac])
# APGAR 1
dat$APGAR_1_FACT = factor(dat$APGAR_1>=9)
dep = "APGAR_1_FACT"
dat4E1 = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4E1)
str(dat4E1)
summary(dat4E1)
mod4E1 = step(glm(APGAR_1_FACT~ . , data = dat4E1, family="binomial"))
mod4E1 = glm.drop.Chisq(mod4E1)
summary(mod4E1)
dat$APGAR_5_FACT = factor(dat$APGAR_5==10)
dep = "APGAR_5_FACT"
dat4E5 = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4E5)
str(dat4E5)
summary(dat4E5)
mod4E5 = step(glm(APGAR_5_FACT~ . , data = dat4E5, family="binomial"))
mod4E5 = glm.drop.Chisq(mod4E5)
dat$APGAR_5_FACT = factor(dat$APGAR_5==10)
dep = "APGAR_5_FACT"
dat4E5 = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4E5)
str(dat4E5)
summary(dat4E5)
mod4E5 = step(glm(APGAR_5_FACT~ . , data = dat4E5, family="binomial"))
mod4E5 = glm.drop.Chisq(mod4E5)
summary(mod4E5)
summary(mod4E5)
# APGAR_10
dat$APGAR_10_FACT = factor(dat$APGAR_10==10)
dep = "APGAR_10_FACT"
dat4E10 = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4E10)
str(dat4E10)
summary(dat4E10)
source("R_functions/glm.drop.Chisq.R")
mod4E10 = step(glm(APGAR_10_FACT~ . , data = dat4E10, family="binomial"))
mod4E10 = glm.drop.Chisq(mod4E10)
# results
#summary(mod4E10)
#Anova(mod4E10, type="III")
#plot(allEffects(mod4E10))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale",  "Iodio_Creat__ug_g_", "T3", "T4")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "Peso"
dat4F = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4F)
str(dat4F)
summary(dat4F)
mod4F = step(lm(Peso~  . , dat4F))
mod4F = lm.drop.F(mod4F)
# results
summary(mod4F)
plot(allEffects((mod4F)))
#check_model(mod4F)
summary(mod4F)
summary(mod4F)
summary(mod4F)
# results
summary(mod4F)
plot(allEffects((mod4F)))
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "Iodio_Creat__ug_g_", "T3", "T4")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "centile_di_peso"
dat4G = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4G)
str(dat4G)
summary(dat4G)
mod4G = step(lm(centile_di_peso~  . , dat4G))
mod4G = lm.drop.F(mod4G)
# results
summary(mod4G)
# results
summary(mod4G)
plot(allEffects((mod4G)))
#check_model(mod4G)
# insert code here
#4H
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "Iodio_Creat__ug_g_", "T3", "T4")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "Lunghezza"
dat4H = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4H)
str(dat4H)
summary(dat4H)
mod4H = step(lm(Lunghezza~  . , dat4H))
mod4H = lm.drop.F(mod4H)
# results
summary(mod4H)
summary(mod4H)
# 4I Centile di Lunghezza
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "Iodio_Creat__ug_g_", "T3", "T4")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "centile_di_lunghezza"
dat4I = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4I)
str(dat4I)
summary(dat4I)
mod4I = step(lm(centile_di_lunghezza~  . , dat4I))
mod4I = lm.drop.F(mod4I)
# results
summary(mod4H)
#check_model(mod4H)
plot(allEffects(mod4H))
# 4I Centile di Lunghezza
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "TSH", "TSH_neonatale", "Iodio_Creat__ug_g_", "T3", "T4")
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "centile_di_lunghezza"
dat4I = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat4I)
str(dat4I)
summary(dat4I)
mod4I = step(lm(centile_di_lunghezza~  . , dat4I))
mod4I = lm.drop.F(mod4I)
# results
summary(mod4I)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_", "TSH")
dat[, preds.fac] = factorall(dat[, preds.fac])
dat[, preds.fac] = factorall(dat[, preds.fac])
dat$T4T3 = dat$T4/dat$T3
dep  = "T4T3"
dat5 = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat5)
str(dat5)
summary(dat5)
mod5 = step(lm(T4T3~  . , dat5))
mod5 = lm.drop.F(mod5)
summary(mod5)
str(dat5)
mod5 = lm.drop.F(mod5)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_", "TSH")
dat[, preds.fac] = factorall(dat[, preds.fac])
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "TSH_neonatale"
dat6 = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat6)
str(dat6)
summary(dat6)
mod6 = step(lm(TSH_neonatale~  . , dat6))
mod6 = lm.drop.F(mod6)
dat6.trim = dat6[abs(scale(resid(mod6))) < 2, ]
mod6.trim = update(mod6, .~., data=dat6.trim)
mod6.trim = lm.drop.F(mod6.trim)
summary(dat6)
mod6 = step(lm(TSH_neonatale~  . , dat6))
mod6 = lm.drop.F(mod6)
summary(mod6)
dat6.trim = dat6[abs(scale(resid(mod6))) < 2, ]
mod6.trim = update(mod6, .~., data=dat6.trim)
mod6.trim = lm.drop.F(mod6.trim)
summary(mod6.trim)
summary(mod6.trim)
preds.fac = c( "Fumo_dic", "Sale_Si_No...37",  "Supplementate_con_iodio...75", "Latte_almeno_1_gg",  "TIT_DIC", "Naz._dic")
preds = c("Peso_pre", "BMI_peso_pre", "Professione...18", "Iodio_Creat__ug_g_", "TSH")
dat[, preds.fac] = factorall(dat[, preds.fac])
dat[, preds.fac] = factorall(dat[, preds.fac])
dep  = "TSH_neonatale"
dat6 = na.omit(dat[, c(preds, preds.fac, dep)])
dim(dat6)
str(dat6)
summary(dat6)
mod6 = step(lm(TSH_neonatale~  . , dat6))
mod6 = lm.drop.F(mod6)
dat6.trim = dat6[abs(scale(resid(mod6))) < 2, ]
mod6.trim = update(mod6, .~., data=dat6.trim)
mod6.trim = lm.drop.F(mod6.trim)
449938.53
103485.86
449938.53 / 103485.86
103485.86 / 449938.53
134981.56 / 449938.53
15 * 400 * 20
350-270
80*1500
shiny::runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
?p
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
?br
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
?p
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
dat.res = adjscores_A2024(df = dat, dep="Score", age="Age", edu="Education", sex="Sex", dep.range = c(0, 30))
dt
dat
summary(dat)
dat.res = adjscores_A2024(df = dat, dep="Score", age="Age", edu="Education", sex="Sex", dep.range = c(0, 30))
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
source("model_transf_text.R")
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
source("~/Documents/Lavori Personali/Improving ES/R simulation ES_v2/R_scripts/DEMO/DEMO_analysis_GEMS.R", echo=TRUE)
plot(allEffects(dat.lm, partial.residuals=T), residuals.cex=0.2)
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
?plot.effect
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
?title
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline')
?plot.effect
af = allEffects(dat.lm, partial.residuals=T)
af = allEffects(dat.lm, partial.residuals=T)
af = allEffects(dat.lm, partial.residuals=T)
af = allEffects(dat.lm, partial.residuals=T)
a_plot = allEffects(dat.lm, partial.residuals=T)
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Offline/app_2pages.R')
shiny::runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
result()==1 & exists("computed_results")
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
!is.null(result())
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
exists("computed_results")
rm(computed_results)
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
observeEvent(input$action_1, { result(1)})
result()
result()
result()
!is.null(result())
result()==1
exists("computed_results")
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
exists("computed_results")
input$action_1
result()
!is.null(result()
!is.null(result())
!is.null(result())
exists("computed_results")
computed_results
rm(list=ls())
runApp('Documents/Lavori Personali/Improving ES/Reg-Method-Norm-Data-CodeApp/ShinyApp-Online')
result()
result()
